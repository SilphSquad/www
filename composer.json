{
    "name": "laravel/laravel",
    "type": "project",
    "description": "The Laravel Framework.",
    "keywords": [
        "framework",
        "laravel"
    ],
    "license": "MIT",
    "require": {
        "php": "^7.1.3",
        "ext-json": "*",
        "babenkoivan/scout-elasticsearch-driver": "^4.0",
        "barryvdh/laravel-cors": "^0.11.4",
        "barryvdh/laravel-elfinder": "^0.4.2",
        "fideloper/proxy": "^4.0",
        "lab404/laravel-impersonate": "^1.4",
        "laravel-notification-channels/twitter": "^2.1",
        "laravel/framework": "5.8.*",
        "laravel/passport": "^7.4",
        "laravel/scout": "^7.1",
        "laravel/socialite": "^4.1",
        "laravel/tinker": "^1.0",
        "laravelcollective/html": "^5.8",
        "league/csv": "^9.3",
        "league/fractal": "^0.18.0",
        "league/glide": "^1.5",
        "predis/predis": "^1.1",
        "prettus/l5-repository": "^2.6",
        "pusher/pusher-php-server": "^4.0",
        "sentry/sentry-laravel": "^1.1",
        "spatie/laravel-backup": "^6.3",
        "spatie/laravel-medialibrary": "^7.10",
        "spatie/laravel-sitemap": "^5.3"
    },
    "require-dev": {
        "barryvdh/laravel-debugbar": "^3.1",
        "barryvdh/laravel-ide-helper": "^2.4",
        "beyondcode/laravel-dump-server": "^1.0",
        "doctrine/dbal": "^2.9",
        "filp/whoops": "^2.0",
        "fzaninotto/faker": "^1.4",
        "josiasmontag/laravel-redis-mock": "^1.2",
        "mockery/mockery": "^1.0",
        "nunomaduro/collision": "^3.0",
        "phpunit/phpunit": "^8.3"
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "autoload": {
        "psr-4": {
            "obsession\\": "app/"
        },
        "classmap": [
            "database/seeds",
            "database/factories"
        ],
        "files": [
            "app/App/Services/PagesPaginationsHelpers.php",
            "app/App/Services/TimeZonesHelpers.php"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi"
        ],
        "ide": [
            "php artisan ide-helper:generate",
            "php artisan ide-helper:meta"
        ],
        "tests:phpunit": [
            "docker-compose --project-name obsession exec -T workspace php /var/www/vendor/bin/phpunit"
        ],
        "tests:dusk": [
            "docker-compose --project-name obsession exec -T workspace php artisan dusk"
        ],
        "tests:phpcs": [
            "docker-compose --project-name obsession exec -T workspace php /var/www/vendor/bin/phpcs --standard=PSR2 app",
            "docker-compose --project-name obsession exec -T workspace php /var/www/vendor/bin/phpcs --standard=PSR2 database",
            "docker-compose --project-name obsession exec -T workspace php /var/www/vendor/bin/phpcs --standard=PSR2 routes",
            "docker-compose --project-name obsession exec -T workspace php /var/www/vendor/bin/phpcs --standard=PSR2 tests"
        ],
        "tests:duplicated": [
            "docker-compose --project-name obsession exec -T workspace php /var/www/vendor/bin/phpcpd app",
            "docker-compose --project-name obsession exec -T workspace php /var/www/vendor/bin/phpcpd database",
            "docker-compose --project-name obsession exec -T workspace php /var/www/vendor/bin/phpcpd tests"
        ],
        "tests:ci:init": [
            "docker-compose --project-name obsession build --no-cache workspace",
            "docker-compose --project-name obsession up -d workspace",
            "docker-compose --project-name obsession exec -T workspace composer install",
            "docker-compose --project-name obsession exec -T workspace php /var/www/artisan key:generate"
        ],
        "docker": [
            "docker-compose --project-name obsession up -d apache2 php-fpm php-worker mysql redis mailhog elasticsearch kibana"
        ],
        "docker:ssh-add": [
            "chmod 600 laradock/workspace/insecure_id_rsa",
            "ssh-add laradock/workspace/insecure_id_rsa"
        ],
        "docker:composer:install": [
            "docker-compose --project-name obsession exec -T workspace composer install"
        ],
        "docker:composer:update": [
            "docker-compose --project-name obsession exec -T workspace composer update"
        ],
        "docker:composer:dump": [
            "docker-compose --project-name obsession exec -T workspace composer dump"
        ],
        "docker:migrate": [
            "docker-compose --project-name obsession exec -T workspace php /var/www/artisan migrate"
        ],
        "docker:migrate:rollback": [
            "docker-compose --project-name obsession exec -T workspace php /var/www/artisan migrate:rollback"
        ],
        "docker:sitemap": [
            "docker-compose --project-name obsession exec -T workspace php /var/www/artisan sitemap:generate"
        ],
        "docker:backup": [
            "docker-compose --project-name obsession exec -T workspace php /var/www/artisan backup:run"
        ],
        "docker:build": [
            "docker-compose --project-name obsession build --no-cache apache2 php-fpm php-worker mysql redis mailhog elasticsearch kibana"
        ],
        "docker:stop": [
            "docker-compose --project-name obsession stop"
        ],
        "docker:remove": [
            "docker-compose --project-name obsession rm -f"
        ],
        "docker:npm:install": [
            "docker-compose --project-name obsession exec -T workspace npm install",
            "docker-compose --project-name obsession exec -T workspace bower install"
        ],
        "docker:npm:dev": [
            "docker-compose --project-name obsession exec -T workspace npm run development"
        ],
        "docker:npm:prod": [
            "docker-compose --project-name obsession exec -T workspace npm run production"
        ],
        "docker:npm:watch": [
            "docker-compose --project-name obsession exec -T workspace npm run watch"
        ]
    }
}
